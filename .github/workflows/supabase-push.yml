name: Push Supabase DB Schema

on:
  push:
    branches: [main, dev]

jobs:
  push-db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Supabase CLI (stable)
        run: |
          VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | jq -r .tag_name)
          DOWNLOAD_URL="https://github.com/supabase/cli/releases/download/${VERSION}/supabase_${VERSION#v}_linux_amd64.tar.gz"

          echo "Downloading: $DOWNLOAD_URL"
          curl -L "$DOWNLOAD_URL" -o supabase.tar.gz

          tar -xzf supabase.tar.gz
          sudo mv supabase /usr/local/bin/
          supabase --version

      - name: Authenticate Supabase CLI
        run: |
          echo "${SUPABASE_ACCESS_TOKEN}" > ~/.supabase-access-token
          supabase login --token "$(cat ~/.supabase-access-token)"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Choose config based on branch
        id: set-config
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "config=.supabase/config.prd.toml" >> $GITHUB_OUTPUT
          else
            echo "config=.supabase/config.stg.toml" >> $GITHUB_OUTPUT
          fi

      - name: Choose project-ref based on branch
        id: set-project
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "project_ref=mcuvsygxeajyitdbtecj" >> $GITHUB_OUTPUT
          else
            echo "project_ref=sifdqhfwpfbhqvwopgrx" >> $GITHUB_OUTPUT
          fi

      - name: Push schema to Supabase
        run: |
          supabase db push --project-ref ${{ steps.set-project.outputs.project_ref }}